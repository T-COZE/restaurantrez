[{"/home/thomas/Documents/finalcapstone/front-end/src/index.js":"1","/home/thomas/Documents/finalcapstone/front-end/src/App.js":"2","/home/thomas/Documents/finalcapstone/front-end/src/layout/Layout.js":"3","/home/thomas/Documents/finalcapstone/front-end/src/layout/Menu.js":"4","/home/thomas/Documents/finalcapstone/front-end/src/layout/Routes.js":"5","/home/thomas/Documents/finalcapstone/front-end/src/layout/NotFound.js":"6","/home/thomas/Documents/finalcapstone/front-end/src/dashboard/Dashboard.js":"7","/home/thomas/Documents/finalcapstone/front-end/src/utils/date-time.js":"8","/home/thomas/Documents/finalcapstone/front-end/src/utils/api.js":"9","/home/thomas/Documents/finalcapstone/front-end/src/layout/ErrorAlert.js":"10","/home/thomas/Documents/finalcapstone/front-end/src/utils/format-reservation-date.js":"11","/home/thomas/Documents/finalcapstone/front-end/src/layout/reservations/NewReservation.js":"12","/home/thomas/Documents/finalcapstone/front-end/src/layout/reservations/ReservationForm.js":"13","/home/thomas/Documents/finalcapstone/front-end/src/layout/reservations/SearchReservations.js":"14","/home/thomas/Documents/finalcapstone/front-end/src/layout/reservations/ReservationsList.js":"15","/home/thomas/Documents/finalcapstone/front-end/src/layout/reservations/EditResrevation.js":"16","/home/thomas/Documents/finalcapstone/front-end/src/layout/tables/SeatTable.js":"17","/home/thomas/Documents/finalcapstone/front-end/src/layout/tables/TableForm.js":"18"},{"size":286,"mtime":1691428242665,"results":"19","hashOfConfig":"20"},{"size":333,"mtime":1691428242665,"results":"21","hashOfConfig":"20"},{"size":550,"mtime":1691428242665,"results":"22","hashOfConfig":"20"},{"size":1817,"mtime":1691428242665,"results":"23","hashOfConfig":"20"},{"size":1620,"mtime":1692987236920,"results":"24","hashOfConfig":"20"},{"size":327,"mtime":1691428242665,"results":"25","hashOfConfig":"20"},{"size":1046,"mtime":1691428242665,"results":"26","hashOfConfig":"20"},{"size":2386,"mtime":1691428242665,"results":"27","hashOfConfig":"20"},{"size":4238,"mtime":1692907787537,"results":"28","hashOfConfig":"20"},{"size":486,"mtime":1691428242665,"results":"29","hashOfConfig":"20"},{"size":628,"mtime":1691428242665,"results":"30","hashOfConfig":"20"},{"size":2512,"mtime":1692814891281,"results":"31","hashOfConfig":"20"},{"size":2256,"mtime":1692896341907,"results":"32","hashOfConfig":"20"},{"size":2178,"mtime":1692895043851,"results":"33","hashOfConfig":"20"},{"size":1940,"mtime":1692884411404,"results":"34","hashOfConfig":"20"},{"size":3463,"mtime":1692902699412,"results":"35","hashOfConfig":"20"},{"size":3067,"mtime":1692987622892,"results":"36","hashOfConfig":"20"},{"size":2169,"mtime":1692987647585,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ig07cj",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/thomas/Documents/finalcapstone/front-end/src/index.js",[],["78","79"],"/home/thomas/Documents/finalcapstone/front-end/src/App.js",[],"/home/thomas/Documents/finalcapstone/front-end/src/layout/Layout.js",[],"/home/thomas/Documents/finalcapstone/front-end/src/layout/Menu.js",[],"/home/thomas/Documents/finalcapstone/front-end/src/layout/Routes.js",["80","81","82","83"],"/home/thomas/Documents/finalcapstone/front-end/src/layout/NotFound.js",[],"/home/thomas/Documents/finalcapstone/front-end/src/dashboard/Dashboard.js",[],"/home/thomas/Documents/finalcapstone/front-end/src/utils/date-time.js",[],"/home/thomas/Documents/finalcapstone/front-end/src/utils/api.js",["84","85"],"/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nimport formatReservationDate from \"./format-reservation-date\";\nimport formatReservationTime from \"./format-reservation-date\";\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  value to return if fetch call is aborted. Default value is undefined.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    const payload = await response.json();\n\n    if (payload.error) {\n      return Promise.reject({ message: payload.error });\n    }\n    return payload.data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\nexport async function openTable(table_id, signal){\n  const url = new URL(`${API_BASE_URL}/reservations`)\n  const options ={\n    method:\"POST\",\n    headers,\n    body: JSON.stringify({ data: reservation}),\n    signal,\n  }\n  return await fetchJson(url, options, reservation)\n}\nexport async function createTable(table, signal) {\n  const url = new URL(`${API_BASE_URL}/tables`);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: table }),\n    signal,\n  };\n  return await fetchJson(url, options, table);\n}\n\n/**\n * Retrieves all existing reservation.\n * @returns {Promise<[reservation]>}\n *  a promise that resolves to a possibly empty array of reservation saved in the database.\n */\n\nexport async function listReservations(params, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  Object.entries(params).forEach(([key, value]) =>\n    url.searchParams.append(key, value.toString())\n  );\n  return await fetchJson(url, { headers, signal }, [])\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\nexport async function listTables(signal) {\n  const url = new URL(`${API_BASE_URL}/tables`);\n  return await fetchJson(url, { headers, signal }, []);\n}\n\nexport async function readReservation(reservation_id, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}`);\n  return await fetchJson(url, { headers, signal }, {});\n}\n \n export async function seatReservation(reservation_id, table_id, signal) {\n   const url = new URL(`${API_BASE_URL}/tables/${table_id}/seat`);\n   const options = {\n     method: \"PUT\",\n     headers,\n     body: JSON.stringify({ data: { reservation_id: reservation_id } }),\n     signal,\n   };\n   return await fetchJson(url, options, {});\n }\n\n export async function updateReservation(reservation, signal) {\n  const url = new URL(\n    `${API_BASE_URL}/reservations/${reservation.reservation_id}`\n  );\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n  return await fetchJson(url, options, reservation);\n}\n\nexport async function createReservation(reservation, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n  return await fetchJson(url, options, reservation);\n}\n \n  export async function updateStatus(reservation_id, status, signal) {\n    const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}/status`);\n    const options = {\n      method: \"PUT\",\n      headers,\n      body: JSON.stringify({ data: { status } }),\n      signal,\n    };\n    return await fetchJson(url, options, status);\n  }\n\n","/home/thomas/Documents/finalcapstone/front-end/src/layout/ErrorAlert.js",[],"/home/thomas/Documents/finalcapstone/front-end/src/utils/format-reservation-date.js",[],"/home/thomas/Documents/finalcapstone/front-end/src/layout/reservations/NewReservation.js",["86","87"],"import React, {useState} from \"react\";\nimport ReservationForm from \"./ReservationForm\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { createReservation } from \"../../utils/api\";\nimport ErrorAlert from \"../ErrorAlert\";\n\n\n\nfunction NewReservation(){\n    const formData = {\n        first_name: \"\",\n        last_name: \"\",\n        mobile_number: \"\",\n        people: 0,\n        reservation_date: \"\",\n        reservation_time: \"\",\n        status: \"\",\n      };\n       const [form, setForm]= useState({...formData})\n       const [displayError, setDisplayError] = useState(false)\n       const abortController = new AbortController()\n       const history = useHistory()\n\n       function formatDate(date) {\n        let formattedDate = date.split(\"\");\n        formattedDate.splice(10);\n        formattedDate = formattedDate.join(\"\");\n        return formattedDate;\n      }\n\n      function formatTime(time){\n        let formattedTime = time.split(\"\")\n        formattedTime.splice(10)\n        formattedTime = formattedTime.join(\"\")\n        return formattedTime\n      }\n      const formatters = {\n        people:parseInt, reservation_date: formatDate, reservation_time:formatTime\n      }\n\n      function changeHandler({ target }) {\n        const { name, value } = target;\n        const formatter = formatters[name] || ((value) => value);\n        \n        setForm({ ...form, [name]: formatter(value) });\n      }\n      async function submitHandler(e){\n        e.preventDefault()\n        setDisplayError(false)\n        const newReservation = {\n            first_name: form.first_name,\n            last_name: form.last_name,\n            mobile_number: form.mobile_number,\n            people: Number(form.people),\n            reservation_date: form.reservation_date,\n            reservation_time: form.reservation_time,\n            status: \"booked\",\n        } \n        try {\n            await createReservation(newReservation, abortController.signal)\n            setForm(formData)\n            history.push(`/dashboard?date=${newReservation.reservation_date}`)\n        }catch(error){\n            if(error.name===\"AbortError\")setDisplayError(error)\n        }\n        return () => {\n            abortController.abort()\n        }\n      }\n\n    return (\n    <div>\n        <h3 className=\"newResTitle \">\n        New Reservation Form\n        </h3>\n            <ReservationForm form={form} submitHandler={submitHandler} changeHandler={changeHandler} />\n    </div>\n    )\n    }\nexport default NewReservation;\n\n\n","/home/thomas/Documents/finalcapstone/front-end/src/layout/reservations/ReservationForm.js",[],"/home/thomas/Documents/finalcapstone/front-end/src/layout/reservations/SearchReservations.js",[],"/home/thomas/Documents/finalcapstone/front-end/src/layout/reservations/ReservationsList.js",[],"/home/thomas/Documents/finalcapstone/front-end/src/layout/reservations/EditResrevation.js",["88","89","90","91"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { readReservation, updateReservation } from \"../../utils/api\";\nimport ErrorAlert from \"../ErrorAlert\";\nimport ReservationForm from \"./ReservationForm\";\n\n\nfunction EditReservation(){\n    const formData = {\n        first_name: \"\",\n        last_name: \"\",\n        mobile_number: \"\",\n        people: 0,\n        reservation_date: \"\",\n        reservation_time: \"\",\n        status: \"\",\n    }\n\n    const [form, setForm] = useState({...formData})\n    const [displayError, setDisplayError] = useState(false)\n    const abortController = new AbortController()\n    const history = useHistory()\n    const {reservation_id} = useParams()\n    const resId = parseInt(reservation_id)\n\n    useEffect(()=>{\n        const abort = new AbortController()\n        const blankRes = {\n            first_name: \"\",\n            last_name: \"\",\n            mobile_number: \"\",\n            people: 0,\n            reservation_id: \"\",\n            reservation_date: \"\",\n            reservation_time: \"\",\n            status: \"\",\n        }\n\n        async function pullRes(){\n            readReservation(resId, abort.signal)\n            .then((response)=>{\n                blankRes.first_name= response.first_name\n                blankRes.last_name=response.last_name\n                blankRes.mobile_number=response.mobile_number\n                blankRes.people= parseInt(response.people)\n                blankRes.reservation_id= parseInt(response.reservation_id)\n                blankRes.reservation_date= formatDate(response.reservation_date)\n                blankRes.reservation_time= formatTime(response.reservation_time)\n                blankRes.status= response.status\n\n                setForm({...blankRes})\n            })\n            .catch((error)=> {\n                if(error.name !== \"AbortError\") setDisplayError(error)\n            })\n        return ()=> abort.abort()\n        }\n        useEffect(()=>{ pullRes()}, [resId])\n    })\n\n    function formatDate(date) {\n        let formattedDate = date.split(\"\");\n        formattedDate.splice(10);\n        formattedDate = formattedDate.join(\"\");\n        return formattedDate;\n      }\n      function formatTime(time) {\n        let formattedTime = time.split(\"\");\n        formattedTime.splice(5);\n        formattedTime = formattedTime.join(\"\");\n        return formattedTime;\n      }\n\n      async function submitHandler(e){\n        e.preventDefault()\n        setDisplayError(false)\n        const updatedReservation ={\n            first_name: form.first_name,\n      last_name: form.last_name,\n      mobile_number: form.mobile_number,\n      people: Number(form.people),\n      reservation_id: resId,\n      reservation_date: form.reservation_date,\n      reservation_time: form.reservation_time,\n      status: \"booked\",\n     }\n     updateReservation(updatedReservation, abortController.signal)\n     .then(()=>{\n        history.push(`/dashboard?date=${updatedReservation.reservation_date}`)\n     })\n     .catch((error)=>{\n        if(error.name !==\" AbortError\") setDisplayError(error)\n     })\n    return ()=>{\n        abortController.abort()\n    }\n }\n\n    \n    return (\n    <div>\n        <h3 className=\"text-center my-3\">Create New Reservation</h3>\n        <ErrorAlert />\n        <ReservationForm \n        form={form} changeHandler={changeHandler} submitHandler={submitHandler}\n        />\n\n    </div>\n    )\n}\n\nexport default EditReservation;","/home/thomas/Documents/finalcapstone/front-end/src/layout/tables/SeatTable.js",["92","93"],"/home/thomas/Documents/finalcapstone/front-end/src/layout/tables/TableForm.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":16,"nodeType":"100","messageId":"101","endLine":1,"endColumn":24},{"ruleId":"98","severity":1,"message":"102","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":15},{"ruleId":"103","severity":2,"message":"104","line":49,"column":26,"nodeType":"100","messageId":"105","endLine":49,"endColumn":30},{"ruleId":"103","severity":2,"message":"106","line":49,"column":43,"nodeType":"100","messageId":"105","endLine":49,"endColumn":50},{"ruleId":"103","severity":2,"message":"107","line":59,"column":34,"nodeType":"100","messageId":"105","endLine":59,"endColumn":45},{"ruleId":"103","severity":2,"message":"107","line":62,"column":40,"nodeType":"100","messageId":"105","endLine":62,"endColumn":51},{"ruleId":"98","severity":1,"message":"108","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":18},{"ruleId":"98","severity":1,"message":"109","line":20,"column":15,"nodeType":"100","messageId":"101","endLine":20,"endColumn":27},{"ruleId":"98","severity":1,"message":"109","line":20,"column":12,"nodeType":"100","messageId":"101","endLine":20,"endColumn":24},{"ruleId":"110","severity":2,"message":"111","line":58,"column":9,"nodeType":"100","endLine":58,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":58,"column":37,"nodeType":"114","endLine":58,"endColumn":44,"suggestions":"115"},{"ruleId":"103","severity":2,"message":"116","line":105,"column":36,"nodeType":"100","messageId":"105","endLine":105,"endColumn":49},{"ruleId":"98","severity":1,"message":"117","line":10,"column":12,"nodeType":"100","messageId":"101","endLine":10,"endColumn":15},{"ruleId":"103","severity":2,"message":"107","line":67,"column":56,"nodeType":"100","messageId":"105","endLine":67,"endColumn":67},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'today' is defined but never used.","no-undef","'date' is not defined.","undef","'setDate' is not defined.","'reservation' is not defined.","'ErrorAlert' is defined but never used.","'displayError' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useEffect\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pullRes'. Either include it or remove the dependency array. Outer scope values like 'resId' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["120"],"'changeHandler' is not defined.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [pullRes]",{"range":"123","text":"124"},[2002,2009],"[pullRes]"]